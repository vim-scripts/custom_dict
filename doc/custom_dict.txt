*custom_dict.txt*		自定义补全字典		最近更新:2012年06月04日

							*custom_dict_plugin*
简介			|custom_dict_plugin_intro|
相关文件		|custom_dict_plugin_files|
使用方法		|custom_dict_plugin_usage|
字典格式		|custom_dict_plugin_dict|
参数说明		|custom_dict_plugin_setup|

===========================================================================
简介						*custom_dict_plugin_intro*

一般的补全大多是直接由程序源码产生，字典则是只有单词，没什么解释等内容。通过
一些简单的脚本把一些帮助文档转换成补全提示，在输入时会很有帮助。本插件规范的
文本带有树状结构，这样补全提示的时候就有层次，对于遗忘的名称会更为方便的搜索
到。


===========================================================================
相关文件					*custom_dict_plugin_files*

plugin/custom_dict.vim		插件
ftplugin/dict.vim		dict文件相关的插件
syntax/dict.vim			dict文件相关的插件
dicts/				存放dict文件的目录
dicts/XX.vim			XX类型的设置
doc/custom_dict.txt		help文件

如果没有编写某文件类型的设置，插件会自动查找 dicts/ 目录下的文件
例如vim的文档只要命名为vim.dict并放入dicts/目录下，不需要相应的vim.vim也可以
使用。文件名称遵从 $filetype...dict 格式，如vim.zh_CN.dict或vim.en.dict

===========================================================================
使用方法					*custom_dict_plugin_usage*

以下按默认设置情况说明

补全					*custom_dict_plugin_usage_complete*
在插入模式下按<C-X><C-U>进入补全模式
在补全模式下按<C-F>，补全菜单将按照同一类型显示，连续按<C-F>可切换遍历各种类
型。按<C-H>进入层次模式显示，按<C-N>或<C-P>选择层次模式显示里类型标记为‣或>
的词条，再按<C-L>将进入到该词条的下一层次里，再按<C-H>返回上一层次。

字典文件				*custom_dict_plugin_usage_dict*
编辑dict文件时，在词条行按+将增加层次深度，按-减少层次。可以用V模式选择多行
同时操作。

===========================================================================
字典格式					*custom_dict_plugin_dict*

样例~
>
	+-*/word1 c 这是词条行，类型为c
	更为详细的说明内容
	...
	+-*/word2 C 这是词条行，类型为C，这一行的内容是短注释
	更为详细的说明内容
	+-*/+-*/word3 _ 这是虚拟词条行，是word2的子层次
	更为详细的说明内容
	+-*/+-*/+-*/word4 C 这是词条行，类型为C，是word3的子层次
	更为详细的说明内容
	+-*/+-*/word5 这是词条行，没有类型，是word2的子层次
	更为详细的说明内容
	/*-+ 这是注释行，通常用于说明类型的含义

<
+-*/是标记词条的，每多一个就多一个层次，子层次的深度不能比父层次的深度多出超于
一个的+-*/。在+-*/后紧跟的就是用于补全的单词，其后可以加上类型，用空白分割，类
型只能是一个英文字符，如果是'_'类型则表示为虚拟的词条，只会出现在层次模式显示里
。一般用于建立虚拟的划分层次。也可以没有类型，词条行的剩余内容为短注释，直接出
现在补全菜单里。详细说明在使用<C-P>或<C-N>或<UP><DOWN>键选择到词条时会出现提示
窗口里。详细内容说明可以按某种格式编写，如vim.dict里的内容都是按help文件格式编
写的，这样通过设置|g:custom_vim_dict_modeline|可以使提示窗口里出现带有语法着色的
提示内容。如果在一个文件里有多种风格的内容，可以在每一个内容后都加上一行对应的
|modeline|来显示不同的风格。注释行通常来说明文档里各类型字符所代表的含义，通常
使用的规范为 >
	/*-+ c	class
	/*-+ m	object method
	/*-+ M	class method
	/*-+ d	object data
	/*-+ f	function
	/*-+ p	module or pack
<
NOTE: +-*/和/*-+都要在行的开头才有效，前面不能有空白。同一子层次里带有孙层次的
	词条不能有重复的，如有重复的视为同一个。同一子层次里不能有同名同类型的
	词条。以下是错误样例 >
	+-*/classA c 
	+-*/+-*/classB c
	+-*/+-*/+-*/method1 m
	+-*/+-*/+-*/method1 m   这是错误的行，不能同名同类型
	+-*/+-*/classC c
	+-*/+-*/+-*/method1 m   这是可以的，因为和以上的method1不是同一子层次
	+-*/+-*/classB c        这里将该词条视为同第二行的词条
	+-*/+-*/+-*/+-*/method2 m   这是错误行，子层次只能比父层次多一个+-*/

===========================================================================
参数说明					*custom_dict_plugin_setup*

全局~
通常写在vimrc配置里 >
	let loaded_custom_dict = 1	 "屏蔽此插件
<

某类型的设置~
通常写在dicts/目录里XX.vim里
这里用文件类型XX作例子 >

	"该类型所使用到的字典文件，此参数是数组类型，每一项是dicts/目录里对应
	"的一个文件
	let g:custom_XX_dict_files = ['XX.1.dict','XX.2.dict']

	"如果所有字典都是一种格式的注释，可以用这一项来标注提示窗口的modeline
	"这一项的类型是字符串，注意modeline要以空白开始
	let g:custom_XX_dict_modeline = ' '.'vim:tw=78:ts=8:ft=??:norl:'

	"这一项指名在非层次模式显示里是否直接使用文档里词条行的短注释作提示
	"一般有时会有多个同名的单词，如果将此项设为0，短注释里将用层次结构
	"来代替，如classA.classB，设为1，将还是使用文档里原先的短注释
	let g:custom_XX_dict_usemenu = 1

	"这一项的值有两种，'free'或'completefunc'
	"free将使用<C-T>来调出补全菜单，completefunc则是使用<C-X><C-U>补全方式
	"两种略有不同，free调出的菜单一般只用于选择
	"completefunc方式里可以通过键入字符来筛选
	"不过本插件有对结果进行排序，在已键入的字符后面调出补全菜单时
	"显示的内容会将相似的结果排在前面
	let g:custom_XX_dict_complete_method = 'completefunc'

	"这是在补全模式下用此键轮换不同类型，默认为<C-F>，注意字符串用单引号
    	let g:custom_XX_dict_complete_kind_key = '<C-F>'

	"这是在补全模式下用此键调用层次模式显示或返回上一层次
	"默认为<C-H>，注意字符串用单引号
    	let g:custom_XX_dict_complete_up_key = '<C-H>'

	"这是在补全模式下用此键进入下一层或进入层次模式显示
	"默认为<C-L>，注意字符串用单引号
    	let g:custom_XX_dict_complete_down_key = '<C-L>'

	"这是free方式里调出补全菜单的快捷键，默认为<C-T>，注意字符串用单引号
    	let g:custom_XX_dict_complete_first_key = '<C-T>'
<
===========================================================================
补充说明~

已知此插件与dbext.vim插件有冲突，如装有dbext本插件可能不能正常使用。
如果有用到提示窗口里的语法着色，在使用minibufexpl插件时需设置 >
	let g:miniBufExplForceSyntaxEnable=1

对于普通模式查看某单词注释，可自定义快捷键来实现此操作,如 >
	nmap <F1> hea<C-X><C-U><C-N>
不过由于词典里单词不一定全是字母形式，而且同名的可能会很多，所以需自行根据不同
情况来实现此功能。


 vim:tw=78:ts=8:ft=help:norl:
